% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/table.R
\name{mcmseq.summary}
\alias{mcmseq.summary}
\title{Function to Summarize MCMSeq Models}
\usage{
mcmseq.summary(mcmseqModel, summarizeWhat = "coefficient", which = 1,
  prop.accepts.betas = c(0.1), prop.accepts.alphas = c(0.1),
  geweke.p = 0.05, order_by = NULL, decreasing = NULL,
  filter_by = NULL, gt = NULL, filter_val = NULL, log2 = FALSE)
}
\arguments{
\item{mcmseqModel}{mcmseq object fit using mcmseq.fit}

\item{summarizeWhat}{character string indicating what to summarize:"coefficient" to summarize fixed effect coefficients or "contrast" to summarize contrasts}

\item{which}{character string or numeric indicator of which coefficient or contrast to summarize}

\item{prop.accepts.betas}{minimum acceptance rate for regression coefficients to be considered converged. Default is 0.1.}

\item{prop.accepts.alphas}{minimum acceptance rate for dispersion parameters to be considered converged.. Default is 0.1.}

\item{geweke.p}{minimum Geweke p-value for a paramter to be considered converged.}

\item{order_by}{character string or vector of character strings which variable(s) to order the results table by: "posterior_median": order by posterior median (default decreasing order); "posterior_median_abs": order by absolute value of the median (default decreasing order); "BF": order by bayes factor (default decreasing order); "exact_pval": order by exact p-value (default increasing order); "BH_adjusted_pval": Order by adjusted p-value (default increasing order)}

\item{decreasing}{logical (TRUE or FALSE) indicating if the results table should appear in decreasing order}

\item{filter_by}{optional character string which variable to use to filter: "posterior_median": filter by posterior mean (default: greater than filter_val); "posterior_median_abs": filter by absolute value of posterior mean (default: greater than filter_val); "BF": filter by bayes factor (default: greater than filter_val); "exact_pval": filter exact p-value (default:less than filter_val); "BH_adjusted_pval": filter by adjusted p-value (default: less than filtre_val);}

\item{gt}{logical (TRUE or FALSE) or vector of logicals indicating if values greater than filter_val(s) should be excluded from the results table.}

\item{filter_val}{numeric variable or vector indicating the threshold for filtering based on the variable(s) in filter_by}

\item{log2}{logical (TRUE or FALSE) indicating if log2 scale should be used (instead of natural log scale)}
}
\value{
An MCMSeq Summary Table
}
\description{
Creates tables of summary results from MCMSeq Model Fits.
}
\examples{
##Fit model
data("simdata")
metadata <- simdata$metadata
counts <- simdata$counts[1:10,]
f <- ~ group*time
contrasts <- rbind(c(0,1,0,1), # group + group:time
                  c(0,0,1,1))  # time + group:time
rownames(contrasts) <- c("Treatment_v_Control_at_FollowUp",
                        "FollowUp_v_Baseline_in_Treatment")
fit.default <- mcmseq.fit(counts=counts,
                         fixed_effects = f,
                         sample_data = metadata,
                         random_intercept = 'ids',
                         gene_names = paste0('gene_', seq(1,10,1)),
                         contrast_mat = contrasts,
                         contrast_names = NULL,
                         n_it = 1000,
                         prop_burn_in = 0.1)

##Summarize results for the first contrast, on the log2 scale
c1_table <- mcmseq.summary(mcmseqModel = fit.default,
                          summarizeWhat="contrast",
                          which = "Treatment_v_Control_at_FollowUp",
                          log2=TRUE)


##Filter out genes with effect sizes less than 1 and BH adjusted p-values > 0.1
##Order results by BH adjusted p-value
c1_table_filtered <- mcmseq.summary(mcmseqModel = fit.default,
                                   summarizeWhat="contrast",
                                   which = "Treatment_v_Control_at_FollowUp",
                                   prop.accepts.betas = c(0.1,1),
                                   prop.accepts.alphas  = c(0.1,0.7),
                                   order_by = "BH_adjusted_pval",
                                   decreasing = FALSE,
                                   filter_by = c("BH_adjusted_pval", "posterior_median_abs"),
                                   filter_val = c(0.1, 1),
                                   gt = c(FALSE, TRUE),
                                   log2=TRUE)

##Do the same for the group coefficient which represnts the difference
##between treatment and control at baseline
group_table_filtered <- mcmseq.summary(mcmseqModel = fit.default,
                                      summarizeWhat="coefficient",
                                      which = "group",
                                      prop.accepts.betas = c(0.1,1),
                                      prop.accepts.alphas  = c(0.1,0.7),
                                      order_by = "BH_adjusted_pval",
                                      decreasing = FALSE,
                                      filter_by = c("BH_adjusted_pval", "posterior_median_abs"),
                                      filter_val = c(0.1, 1),
                                      gt = c(FALSE, TRUE),
                                      log2=TRUE)




}
