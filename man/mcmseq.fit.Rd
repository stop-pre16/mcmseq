% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.R
\name{mcmseq.fit}
\alias{mcmseq.fit}
\title{Function to Fit MCMSeq Models}
\usage{
mcmseq.fit(counts = NULL, gene_names = NULL, fixed_effects = NULL,
  sample_data = NULL, random_intercept = NULL, contrast_mat = NULL,
  contrast_names = NULL, log_offset = NULL, proposal_method = "wls",
  prior_sd_betas = 7, prior_u_re_var = 0.01, prior_v_re_var = 0.01,
  prior_sd_log_alpha = 7, prior_mean_log_alpha = NULL, n_it = 1000,
  rw_sd_log_alpha = 3, starting_betas = NULL, rw_sd_betas = 0.5,
  prop_burn_in = 0.1, num_accept = 20L, prop.accepts.betas = c(0.1),
  prop.accepts.alphas = c(0.1), geweke.p = 0.05)
}
\arguments{
\item{counts}{A (G x N) numeric matrix or data frame of RNA-seq counts, with genes in rows and samples in columns. G = number of genes.  N = number of samples.}

\item{gene_names}{An optional character vector of gene names (length G).  If unspecified, row names from the counts matrix will be used.}

\item{fixed_effects}{A one-sided linear formula describing the fixed-effects part of the model. The independent variable terms are listed to the right of the ~ and separated by + operators.}

\item{sample_data}{Data frame with N rows containing the fixed effects terms included in the fixed_effects formula, as well as any random effects listed in random_intercept.  The rows of the data frame must correspond (and be in the same order as) the columns of the counts matrix.}

\item{random_intercept}{An optional character string indicating the name of the clustering variable in sample_data to use as a random intercept.}

\item{contrast_mat}{An optional C x P numeric matrix of linear contrasts to test, where C is the number of contrasts and P is the number of fixed effects parameters in the model.  Each row is a contrast.}

\item{contrast_names}{An optional character vector of contrast names (length C).  If unspecified, row names from contrast_mat will be used.}

\item{log_offset}{A vector of offsets (on the linear predictor/natural log scale) to account for differences in sequencing depth between samples.  If no offset is specified, the ln(75th percentile of counts for sample i) / median(ln(75th percentile of counts) across all samples) is used.}

\item{proposal_method}{Method for updating the regression coefficients.  Either 'rw" (random walk) or 'wls' (weighted least squares).  Default is 'wls'.}

\item{prior_sd_betas}{Standard deviation, s for the normal(0, s^2) prior for regression coefficients.  Default is 7.}

\item{prior_u_re_var}{U parameter in inverse gamma prior for random intercept variance.  Default is 0.01.}

\item{prior_v_re_var}{V parameter in inverse gamma prior for random intercept variance.  Default is 0.01.}

\item{prior_sd_log_alpha}{Standard deviation in the log-normal prior for dispersion parameters.  Default is 7.}

\item{prior_mean_log_alpha}{Vector of prior means for log of dispersion parameters.  If a single value is provided (rather than a vector), the same value will be used for all genes. Default is -ln(2) for all genes.}

\item{n_it}{Number of MCMC iterations.  Default is 1,000.}

\item{rw_sd_log_alpha}{Standard deviation for the random walk proposal for dispersion values (normal distribution centerd at current value)}

\item{starting_betas}{Numeric matrix of starting values for the regression coefficients. For best results, supply starting values for at least the intercept (e.g. row means of counts matrix)}

\item{rw_sd_betas}{Standard deviation for the random walk proposal for regression coefficients.  Only used for propsal_method = 'rw'.  Default is 0.5.}

\item{prop_burn_in}{Number between 0 and 1 indicating the proportion of MCMC chain to discard as burn-in.  Default is 0.1.}

\item{num_accept}{Number of forced accepts of fixed and random effects at the beginning of the MCMC. In practice forcing about 20 accepts (default value) prevents inverse errors at the start of chains and gives better mixing overall.  This value must be less than or equal to the number of burn-in iterations.}

\item{prop.accepts.betas}{minimum acceptance rate for regression coefficients to be considered converged. Default is 0.1.}

\item{prop.accepts.alphas}{minimum acceptance rate for dispersion parameters to be considered converged.. Default is 0.1.}

\item{geweke.p}{minimum Geweke p-value for a paramter to be considered converged.
#'}
}
\value{
An MCMSeq Object
}
\description{
Fits negative binomial generlized linear models and negative binomial generalized linear mixed models to RNA-Seq data using MCMC.
}
\examples{
data("simdata")
metadata <- simdata$metadata

##Only including 10 genes in the counts matrix
counts <- simdata$counts[1:10,]

##Create the fixed effects model formula
f <- ~ group*time
##Create the contrast matrix
contrasts <- rbind(c(0,1,0,1), # group + group:time
                  c(0,0,1,1))  # time + group:time


##Name the contrasts by specifying rownames
rownames(contrasts) <- c("Treatment_v_Control_at_FollowUp",
                        "FollowUp_v_Baseline_in_Treatment")

##Fit the Model
fit.default <- mcmseq.fit(counts=counts,
                         fixed_effects = f,
                         sample_data = metadata,
                         random_intercept = 'ids',
                         gene_names = paste0('gene_', seq(1,10,1)),
                         contrast_mat = contrasts,
                         contrast_names = NULL,
                         n_it = 1000,
                         prop_burn_in = 0.1)




}
